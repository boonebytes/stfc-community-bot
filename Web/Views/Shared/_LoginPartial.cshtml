@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore.Internal
@inject SignInManager<AppUser> _signInManager
@*inject UserManager<AppUser> UserManager *@

<ul class="navbar-nav">
    @if (_signInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-controller="Account" asp-action="Index" title="Manage">Hello @HttpContextAccessor.HttpContext.Session.GetUsername() !</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>